plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
//    id "edu.wpi.first.GradleRIO" version "2023.0.0-alpha-1"
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url "https://maven.tterrag.com/"
    }
    flatDir { dirs 'local_maven' }
}

def includeDesktopSupport = false

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

//    implementation wpi.java.deps.wpilib()
//    implementation wpi.java.vendor.java()
//
//    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
//    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
//
//    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
//    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)

    implementation "edu.wpi.first.wpilibj:wpilibj"
    implementation "edu.wpi.first.ntcore:ntcore"
    implementation "edu.wpi.first.wpiutil:wpiutil"
    implementation "edu.wpi.first.thirdparty.frc2019.opencv:opencv-java"
    implementation "edu.wpi.first.cscore:cscore"
    implementation "edu.wpi.first.cameraserver:cameraserver"
    implementation "edu.wpi.first.hal:hal"
    implementation "edu.wpi.first.math:wpimath"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

runClient {
    systemProperty "java.library.path", "${project.rootDir}/native_libs"
}

runServer {
    systemProperty "java.library.path", "${project.rootDir}/native_libs"
}
